<?php
/**
 * Created by PhpStorm.
 * User: Yeah
 * Date: 2018/11/1
 * Time: 21:22
 */
namespace app\api\controller;
use app\common\Api;
use app\common\model\Classify;
use app\common\model\Order as ModelOrder;
class Order extends Api{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    public function multiArray(){
        return json(['code'=>0,'msg'=>'获取成功','data'=>weekTime()]);
    }

    /**
     * @throws \think\exception\DbException
     */
    public function payment(){

        $data=[
            'class_id'=>input('class_id',0),
            'booking_time'=>input('booking_time',0),
            'remark'=>input('remark',0),
            'order_no'=>trade_no(),
            'username'=>input('username'),
            'mobile'=>input('mobile'),
            'address'=>input('address'),
            'uid'=>$this->user->id,
            'acid'=>$this->acid,
            'detail_info'=>input('detail_info'),
            'sex'=>input('sex',1)
        ];
       if(!$data['booking_time'])return json(['code'=>1
           ,'msg'=>'请选择时间']);
       $classify=Classify::get(['id'=>$data['class_id'],'is_delete'=>0,'parent_id'=>['neq',0]]);
       if(!$classify)return json(['code'=>1,'msg'=>'下单产品不存在']);
       if($classify['price']==0.00){//免费预约订单
           $data['is_free']=1;
           $data['price']=0.00;
           $data['is_pay']=1;
           $data['status']=1;
           $data['pay_time']=time();
           $order=ModelOrder::create($data);
           if(!$order)return json(['code'=>1,'msg'=>'预约失败']);
           return json(['code'=>2,'msg'=>'预约成功']);
       }else{
           $data['price']=$classify['price'];
           $order=ModelOrder::create($data);
           if(!$order)return json(['code'=>1,'msg'=>'预约失败']);
           $res=$this->weChat->pay->unifiedOrder([
               'body'=>"{$classify['title']}预约订单",
               'out_trade_no'=>$data['order_no'],
               'total_fee'=>$data['price']*100,
               'notify_url'=>"{$this->We7->siteroot}/addons/sd_135K/code/notify.php",
               'trade_type'=>'JSAPI',
               'openid'=>$this->user->wx_openid
           ]);
           if(empty($res))return ['code'=>0,'支付请求失败'];
           if($res['return_code']=='FAIL')return ['code'=>0,'msg'=>$res['return_msg']];
           $data=[
               'appId'=>$this->weChat->appId,
               'timeStamp'=>(string)time(),
               'nonceStr' => md5(uniqid()),
               'package' => 'prepay_id=' . $res['prepay_id'],
               'signType' => 'MD5',
           ];
           $data['paySign']=$this->weChat->pay->makeSign($data);
           unset($data['appId']);
           return json(['code'=>0,'msg'=>'获取成功','data'=>$data]);
       }
    }
    public function order_list($active=1){
        $where_arr=[
            1=>['o.is_pay'=>0,'o.status'=>0],
            2=>['o.is_pay'=>1,'o.status'=>1],
            3=>['o.is_serve'=>1,'o.status'=>2],
            4=>['o.is_send'=>1,'o.status'=>3],
            5=>['o.apply_delete'=>1,'o.status'=>-1]
        ];
        $where=$where_arr[$active];
        $data=ModelOrder::alias('o')
            ->join('Classify c','c.id=o.class_id')
            ->where(['o.acid'=>$this->acid,'o.uid'=>$this->user->id])
            ->order('o.create_time desc')
            ->where($where)
            ->field('c.title,o.*,c.logo')
            ->select();
        return json(['code'=>0,'msg'=>'获取成功','data'=>$data]);
    }

}