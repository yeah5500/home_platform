<?php
/**
 * Created by PhpStorm.
 * User: Yeah
 * Date: 2018/11/15
 * Time: 13:19
 */
namespace app\web\controller;
use app\common\Home;
use app\common\model\Order as ModelOrder;
class Order extends Home{
    /**
     * @var ModelOrder;
     */
    protected $model;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model=new ModelOrder();
    }
    /**
     * @return \think\response\Json
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function remind(){
        if(request()->isAjax()){

            $count=$this->model
                ->where(['is_read'=>0,'status'=>1,'acid'=>$this->acid])
                ->count();
            $order=$this->model->order('create_time desc')->where(['acid'=>$this->acid,'is_pay'=>1,'is_remind'=>0])->find();
            $order&& $order->save(['is_remind'=>1]);
            if(!$order)return json(['code'=>0,'msg'=>'获取成功','count'=>$count]);
            return json(['code'=>2,'msg'=>'您有新的订单','count'=>$count]);
        }
        die;
    }

    /**
     * @param string $search
     * @return \think\response\View
     * @throws \think\exception\DbException
     */
    public function index($search=''){
        $where=[];
        $search&&$where['u.nickname|o.order_no|u.mobile|o.mobile|c.title']=['like',"%{$search}%"];
        $data=$this->model->alias('o')
            ->join('User u','u.id=o.uid')
            ->join('Classify c','c.id=o.class_id')
            ->where($where)
            ->where(['o.acid'=>$this->acid])
            ->field('u.nickname,u.avatar_url,u.mobile as phone,c.title,o.*')
            ->order('o.create_time desc')
            ->paginate('',false,['query'=>$_GET]);

        return view('',['data'=>$data]);
    }
    /**
     * @param string $search
     * @return \think\response\View
     * @throws \think\exception\DbException
     */
    public function pending($search=''){
        $where=[];
        $search&&$where['u.nickname|o.order_no|u.mobile|o.mobile|c.title']=['like',"%{$search}%"];
        $data=$this->model->alias('o')
            ->join('User u','u.id=o.uid')
            ->join('Classify c','c.id=o.class_id')
            ->where($where)
            ->where(['o.acid'=>$this->acid,'status'=>0])
            ->field('u.nickname,u.avatar_url,u.mobile as phone,c.title,o.*')
            ->order('o.create_time desc')
            ->paginate('',false,['query'=>$_GET]);
        return view('',['data'=>$data]);

    }
    /**
     * @param string $search
     * @return \think\response\View
     * @throws \think\exception\DbException
     */
    public function appoint($search=''){
        $where=[];
        $search&&$where['u.nickname|o.order_no|u.mobile|o.mobile|c.title']=['like',"%{$search}%"];
        $data=$this->model->alias('o')
            ->join('User u','u.id=o.uid')
            ->join('Classify c','c.id=o.class_id')
            ->where($where)
            ->where(['o.acid'=>$this->acid,'status'=>1])
            ->field('u.nickname,u.avatar_url,u.mobile as phone,c.title,o.*')
            ->order('o.create_time desc')
            ->paginate('',false,['query'=>$_GET]);
        return view('',['data'=>$data]);
    }

    /**
     * @param $id
     * @return \think\response\Json
     */
    public function hides($id){
        $res=$this->model->save(['is_read'=>1],['id'=>$id,'acid'=>$this->acid]);
        if(!$res)return json(['code'=>1,'msg'=>'更新失败']);
        return json(['code'=>0,'msg'=>'更新成功']);
    }
    /**
     * @return \think\response\Json
     */
    public function assigns(){
        $data=[
            'serve_name'=>input('serve_name'),
            'serve_mobile'=>input('serve_mobile'),
            'serve_time'=>time(),
            'id'=>input('id'),
            'status'=>2,
            'is_serve'=>1
        ];
        $data=$this->model->validate([
            ['serve_name','require|min:2','请输入姓名|姓名不能少于两个字'],
            ['serve_mobile','require|regex:^[1][0-9]{10}$', '电话不能为空|请输入正确的手机号'],
            ['id','require','参数错误']
        ])->save($data,$data['id']);
        if(!$data)return json(['code'=>1,'msg'=>$this->model->getError()?$this->model->getError():'指派失败']);
        return json(['code'=>0,'msg'=>'指派成功,请在服务订单查看']);
    }
    public function serve($search=''){
        $where=[];
        $search&&$where['u.nickname|o.order_no|u.mobile|o.mobile|c.title']=['like',"%{$search}%"];
        $data=$this->model->alias('o')
            ->join('User u','u.id=o.uid')
            ->join('Classify c','c.id=o.class_id')
            ->where($where)
            ->where(['o.acid'=>$this->acid,'status'=>2])
            ->field('u.nickname,u.avatar_url,u.mobile as phone,c.title,o.*')
            ->order('o.create_time desc')
            ->paginate('',false,['query'=>$_GET]);
        return view('',['data'=>$data]);
    }
    public function confirm($id){
        $res=$this->model->save(['is_send'=>1,'status'=>3],['id'=>$id,'acid'=>$this->acid]);
        if(!$res)return json(['code'=>1,'msg'=>'确认失败']);
        return json(['code'=>0,'msg'=>'确认成功']);
    }
    public function end($search=''){
        $where=[];
        $search&&$where['u.nickname|o.order_no|u.mobile|o.mobile|c.title']=['like',"%{$search}%"];
        $data=$this->model->alias('o')
            ->join('User u','u.id=o.uid')
            ->join('Classify c','c.id=o.class_id')
            ->where($where)
            ->where(['o.acid'=>$this->acid,'status'=>3])
            ->field('u.nickname,u.avatar_url,u.mobile as phone,c.title,o.*')
            ->order('o.create_time desc')
            ->paginate('',false,['query'=>$_GET]);
        return view('',['data'=>$data]);
    }
    public function refund(){

    }

    /**
     * @param $id
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function details($id){
        if(!request()->isAjax())die;
        $data=$this->model->alias('o')
            ->join('User u','u.id=o.uid')
            ->join('Classify c','c.id=o.class_id')
            ->where(['o.acid'=>$this->acid,'o.id'=>$id])
            ->field('u.nickname,u.avatar_url,u.mobile as phone,c.title,o.*')
            ->order('o.create_time desc')
            ->find();
        if(!$data)return json(['code'=>1,'msg'=>"您获取的内容不存在"]);
        return json(['code'=>0,'msg'=>'获取成功','data'=>$data]);
    }
}